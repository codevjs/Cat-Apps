{"version":3,"sources":["contexts/drawer/index.tsx","components/trigger/index.tsx","components/menu/data.tsx","components/menu/index.tsx","components/drawer/index.tsx","components/sider/index.tsx","components/layout/index.tsx","components/loader/index.tsx","components/index.tsx","components/wysiwyg/index.tsx","contexts/sessions/index.tsx","services/upload/index.ts","hooks/login/index.ts","router/pages.tsx","router/protected.tsx","router/public.tsx","router/index.tsx","reportWebVitals.ts","index.tsx"],"names":["DrawerContext","createContext","DrawerProvider","props","useState","visible","setVisible","Provider","value","children","Trigger","useContext","className","type","shape","onClick","MenuOutlined","React","memo","data","main","title","link","icon","LineChartOutlined","style","fontSize","role","DesktopOutlined","Menus","selectedKeys","setSelectedKeys","useAuth","signOut","useEffect","pathname","window","location","background","width","defaultSelectedKeys","mode","src","alt","Item","disabled","color","map","item","to","LogoutOutlined","Drawers","onClose","closable","placement","Sider","BaseLayout","Content","Spinner","spinning","indicator","size","tip","components","Layout","Loader","Wysiwyg","model","setModel","isLoading","setLoading","tag","config","imageEditButtons","quickInsertTags","videoUpload","fileUpload","imagePaste","height","toolbarSticky","key","process","events","html","insert","render","files","ref","lastModified","name","replace","path","uploadImage","then","finally","onModelChange","SessionContext","SessionProvider","authenticated","setAuthenticated","user","setUser","firebase","auth","onAuthStateChanged","a","getIdTokenResult","idTokenResult","claims","uploadFile","file","cb","Promise","resolve","reject","uploadTask","storage","child","put","on","snapshot","progress","bytesTransferred","totalBytes","error","getDownloadURL","downloadURL","useLogin","form","values","signInWithEmailAndPassword","email","password","notification","message","description","resetFields","pages","isPublic","component","lazy","Protected","Component","Public","Router","Suspense","fallback","page","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.57f4c6bb.chunk.js","sourcesContent":["import React, {createContext, Dispatch, useState} from \"react\";\n\ntype ContextProps = [\n    visible       : boolean,\n    setVisible    : Dispatch<boolean>,\n]\n\nexport const DrawerContext = createContext<ContextProps>({} as ContextProps);\n\nexport const DrawerProvider : React.FC = (props) => {\n\n    const [visible, setVisible] = useState<boolean>(false);\n\n    return (\n        <DrawerContext.Provider value={[visible, setVisible]}>\n            {props.children}\n        </DrawerContext.Provider>\n    )\n}\n","import React, {useContext} from \"react\";\nimport {Button} from \"antd\";\nimport {MenuOutlined} from \"@ant-design/icons\";\nimport {DrawerContext} from \"contexts/drawer\";\n\nconst Trigger : React.FC = () => {\n\n    const [, setVisible] = useContext(DrawerContext);\n\n    return (\n        <div className={\"drawer-button\"}>\n            <Button type={\"primary\"} shape={\"circle\"} onClick={() => setVisible(true)}>\n                <MenuOutlined />\n            </Button>\n        </div>\n    )\n}\n\nexport default React.memo(Trigger);","import React from \"react\";\nimport {\n    LineChartOutlined,\n    DesktopOutlined\n} from \"@ant-design/icons\";\n\nconst data = {\n    main : [\n        {\n            title : \"Dashboard\",\n            link  : \"/kelola/dashboard\",\n            icon  : <LineChartOutlined style={{fontSize : 18}} />,\n            role  : [\"admin\"]\n        }, {\n            title : \"Halaman depan\",\n            link  : \"/kelola/halaman-depan\",\n            icon  : <DesktopOutlined style={{fontSize : 18}} />,\n            role  : [\"admin\"]\n        }\n    ]\n}\n\nexport default data","import React, {useEffect, useState} from \"react\";\nimport {Button, Menu} from 'antd';\nimport {Link} from \"react-router-dom\";\nimport {LogoutOutlined} from \"@ant-design/icons\";\nimport useAuth from \"hooks/login\";\nimport data from \"./data\";\n\nconst Menus : React.FC = () => {\n\n    const [selectedKeys, setSelectedKeys] = useState<string>('');\n    const [, , signOut]                   = useAuth();\n\n    useEffect(() => {\n\n        let pathname : string = window.location.pathname;\n\n        setSelectedKeys(pathname);\n    }, [])\n\n    return (\n        <Menu\n            className={\"menu\"}\n            style={{ background : \"transparent\", width : \"100%\" }}\n            defaultSelectedKeys={['/kelola/dashboard']}\n            mode=\"inline\"\n            selectedKeys={[selectedKeys]}\n        >\n            <div className={\"logo\"}>\n                <img\n                    width={150}\n                    src={\"/images/dashboard.svg\"}\n                    alt={\"logo\"}\n                />\n            </div>\n\n            <Menu.Item disabled={true}>\n                <h4 style={{color : \"#7A7E87\"}}>Utama</h4>\n            </Menu.Item>\n\n            {\n                data.main.map(item => (\n                    <Menu.Item key={item.link}>\n                        <Link to={item.link}>\n                            <Button>\n                                {item.icon}\n                            </Button>\n                            {item.title}\n                        </Link>\n                    </Menu.Item>\n                ))\n            }\n\n            <Menu.Item key={\"logout\"}>\n                <Link to={\"#\"} onClick={signOut}>\n                    <Button>\n                        <LogoutOutlined style={{fontSize : 18}} />\n                    </Button>\n                    Keluar\n                </Link>\n            </Menu.Item>\n        </Menu>\n    )\n}\n\nexport default React.memo(Menus);","import React, {useContext} from \"react\";\nimport {Drawer} from \"antd\";\nimport {DrawerContext} from \"contexts/drawer\";\nimport Menu from \"../menu\";\n\nconst Drawers : React.FC = () => {\n\n    const [visible, setVisible] = useContext(DrawerContext);\n\n    return (\n      <Drawer\n        visible={visible}\n        onClose={() => setVisible(false)}\n        closable={false}\n        placement={\"left\"}\n        className={\"admin-drawer\"}\n      >\n          <Menu />\n      </Drawer>\n    )\n}\n\nexport default Drawers","import React from \"react\";\nimport {Layout} from \"antd\";\nimport Menu from \"../menu\";\n\nconst Sider : React.FC = () => {\n\n    return (\n        <Layout.Sider\n            className={\"admin-sider\"}\n            width={250}\n        >\n            <Menu />\n        </Layout.Sider>\n    )\n}\n\nexport default React.memo(Sider)","import React from \"react\";\nimport {Layout} from 'antd';\nimport {DrawerProvider} from \"contexts/drawer\";\nimport Trigger from \"../trigger\";\nimport Drawers from \"../drawer\";\nimport Sider from \"../sider\";\n\nconst BaseLayout : React.FC = (props) => {\n    return (\n        <Layout className={\"admin-layout\"}>\n           <DrawerProvider>\n               <Trigger />\n               <Drawers />\n               <Sider/>\n               <Layout>\n                   {/*<Header/>*/}\n                   <Layout.Content className={\"admin-content\"}>\n                       {props.children}\n                   </Layout.Content>\n               </Layout>\n           </DrawerProvider>\n        </Layout>\n    )\n}\n\nexport default BaseLayout;","import React from \"react\";\nimport {Spin} from \"antd\";\nimport \"assets/styles/loader.less\";\n\ninterface Props {\n    tip: string,\n    spinning: boolean\n}\n\nconst Spinner: React.FC<Props> = ({spinning, }) => {\n    return (\n        <div className={\"spinner-container\"}>\n            <Spin\n                indicator={\n                    <div className={\"spinner-container\"}>\n                        <img width={300} src={\"/images/loader.gif\"} alt={\"\"} />\n                    </div>\n                }\n                className={\"spin\"}\n                size={\"large\"}\n                spinning={spinning}\n                tip={\"\"}\n            />\n        </div>\n    )\n};\n\nexport default Spinner;","import Layout from \"./layout\";\nimport Loader from \"./loader\";\nimport Wysiwyg from \"./wysiwyg\";\n\nconst components = {\n    Layout,\n    Loader,\n    Wysiwyg\n}\n\nexport default components;","import React, { useState} from \"react\";\nimport FroalaEditor from 'react-froala-wysiwyg';\nimport 'assets/styles/froala_editor.pkgd.min.css';\nimport 'froala-editor/js/plugins.pkgd.min.js';\nimport uploadImage from \"services/upload\";\nimport {Spin} from \"antd\";\n\ninterface Props {\n    model : string,\n    setModel : (html : string) => void\n}\n\nconst Wysiwyg : React.FC<Props> = ({model, setModel}) => {\n\n    const [isLoading, setLoading] = useState<boolean>(false);\n\n    return (\n        <Spin spinning={isLoading}>\n            <FroalaEditor\n                tag='textarea'\n                config={{\n                    imageEditButtons: ['imageReplace', 'imageAlign', 'imageRemove', '|', 'imageLink', 'linkOpen', 'linkEdit', 'linkRemove', '-', 'imageDisplay', 'imageStyle', 'imageAlt', 'imageSize'],\n                    quickInsertTags : [''],\n                    videoUpload : false,\n                    fileUpload : false,\n                    imagePaste :false,\n                    height: '20vh',\n                    toolbarSticky : false,\n                    key : process.env.REACT_APP_FROALA_KEY,\n                    events : {\n                        html : { insert : (html? : string, render? : boolean) => {}},\n                        'image.beforeUpload' : function (files : File[]){\n\n                            setLoading(true);\n\n                            let ref  = `/froala/${files[0].lastModified}_${files[0].name?.replace(/ /g, \"_\")}`;\n                            let path = `https://storage.googleapis.com/new-etc.appspot.com${ref}`;\n\n                            uploadImage(ref, files[0])\n                                .then(() => {\n\n                                    this.html.insert('<img alt=\"\" src=' + path + ' />', true);\n                                })\n                                .finally(() => {\n\n                                    setLoading(false);\n                                })\n\n                            // You need to set it as false, to prevent Froala uplaod.\n                            return false;\n                        },\n                    }\n                }}\n                onModelChange={setModel}\n                model={model}\n            />\n        </Spin>\n    )\n}\n\nexport default Wysiwyg;\n","import React, {createContext, useEffect, useState} from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\ntype ContextProps = [\n    authenticated : boolean,\n    isLoading     : boolean,\n    user          : any | null\n]\n\nexport const SessionContext = createContext<ContextProps>([true, false, null]);\n\nexport const SessionProvider : React.FC = (props) => {\n\n    const [authenticated, setAuthenticated] = useState<boolean>(true);\n    const [user, setUser]                   = useState<object|null>(null);\n    const [isLoading, setLoading]           = useState<boolean>(true);\n\n    useEffect(() => {\n\n        setLoading(true);\n\n        firebase.auth()\n            .onAuthStateChanged( async (user ) => {\n            if (user !== null) {\n\n                const idTokenResult =  await user.getIdTokenResult();\n\n                setUser({...user, claims : idTokenResult.claims});\n                setAuthenticated(true);\n                setLoading(false);\n\n            } else {\n\n                setAuthenticated(false);\n                setUser(null);\n                setLoading(false);\n            }\n        })\n    }, []);\n\n    return (\n        <SessionContext.Provider value={[authenticated, isLoading, user]}>\n            {props.children}\n        </SessionContext.Provider>\n    )\n}\n","import firebase from \"firebase/app\";\nimport \"firebase/storage\";\nimport {RcFile} from \"antd/lib/upload/interface\";\n\nfunction uploadFile(ref : string,  file : RcFile | File, cb? : (percent : number) => void) : Promise<string> {\n\n    return new Promise<string>((resolve, reject) => {\n\n        // Create a root reference\n        let storageRef = firebase.storage().ref();\n        let fileRef    = storageRef.child(ref);\n        let uploadTask = fileRef.put(file);\n\n        // Register three observers:\n        // 1. 'state_changed' observer, called any time the state changes\n        // 2. Error observer, called on failure\n        // 3. Completion observer, called on successful completion\n        uploadTask.on('state_changed', (snapshot) => {\n\n            // Observe state change events such as progress, pause, and resume\n            // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n            let progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n\n            if (cb) cb(progress)\n\n        }, (error) => {\n\n            // Handle unsuccessful uploads\n            return reject(error)\n        }, () => {\n\n            // Handle successful uploads on complete\n            // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n            uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\n\n                return resolve(downloadURL);\n            });\n        });\n    })\n}\n\nexport default uploadFile","import {useState} from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport {notification} from \"antd\";\nimport {Store, FormInstance} from \"rc-field-form/lib/interface\";\n\nfunction useLogin(form? : FormInstance) : [isLoading : boolean, signIn: (values : Store) => Promise<void>, signOut: () => Promise<void>] {\n\n    const [isLoading, setLoading] = useState<boolean>(false);\n\n    const signIn  = async (values : Store) : Promise<void> => {\n        try {\n\n            setLoading(true);\n\n            await firebase.auth().signInWithEmailAndPassword(values.email, values.password);\n\n        } catch (error) {\n\n            notification[\"error\"]({\n                message : error.message,\n                description : error.description\n            });\n\n            form && form.resetFields();\n\n        } finally {\n\n            setLoading(false);\n        }\n    }\n\n    const signOut = async () : Promise<void> => {\n\n        await firebase.auth().signOut();\n    }\n\n    return [isLoading, signIn, signOut]\n}\n\nexport default useLogin;","import React from 'react';\n\ninterface Pages {\n    path      : string,\n    isPublic  : boolean,\n    component : React.LazyExoticComponent<React.FC>,\n    role      : string[]\n}\n\nlet pages : Pages[] = [\n    {\n        path      : \"/kelola/dashboard\",\n        isPublic  : false,\n        component : React.lazy(() => import('../pages/cats')),\n        role      : [\"admin\"]\n    },\n    {\n        path      : \"/kelola/halaman-depan\",\n        isPublic  : false,\n        component : React.lazy(() => import('../pages/frontpage')),\n        role      : [\"admin\"]\n    },\n    {\n        path      : \"/\",\n        isPublic  : true,\n        component : React.lazy(() => import('../pages/login')),\n        role      : []\n    }\n]\n\nexport default pages","import React, {useContext} from 'react';\nimport {Route, Redirect} from \"react-router-dom\";\nimport {SessionContext} from \"contexts/sessions\";\nimport Components from \"components\";\n\ntype Props = {\n    component : React.FC<any>,\n    path      : string,\n    role      : string[]\n}\n\nconst Protected : React.FC<Props> = ({ component : Component , path, role  }) => {\n\n    const [authenticated, isLoading] = useContext(SessionContext);\n\n    return (\n        <Route\n            path={path}\n            render={props => {\n                return isLoading\n                    ? <Components.Loader tip={\"Menghubungkan Ke Server ...\"} spinning={isLoading} />\n                    : authenticated && !isLoading\n                        ? <Component {...props} />\n                        : <Redirect to={\"/\"} />\n            }}\n        />\n    )\n}\n\nexport default Protected","import React from 'react';\nimport {Route} from 'react-router-dom';\n\ntype Props = {\n    component: React.FC<any>,\n    path: string\n}\n\nconst Public: React.FC<Props> = ({component: Component, path}) => {\n\n    return (\n        <Route\n            path={path}\n            render={props => <Component {...props} />}\n        />\n    )\n}\n\nexport default Public","import React from 'react';\nimport {BrowserRouter, Switch} from 'react-router-dom';\nimport Components from \"components\";\nimport {SessionProvider} from \"contexts/sessions\";\nimport pages from \"./pages\";\nimport Protected from \"./protected\";\nimport Public from \"./public\";\n\nconst Router : React.FC = () => {\n    return (\n        <SessionProvider>\n            <React.Suspense fallback={<Components.Loader spinning={true} tip={\"Loading...\"} />}>\n                <BrowserRouter>\n                    <Switch>\n                        {\n                            pages.map(page => (\n                                page.isPublic\n                                    ? <Public key={page.path} path={page.path} component={page.component} />\n                                    : <Protected key={page.path} path={page.path} component={page.component} role={page.role} />\n                            ))\n                        }\n                    </Switch>\n                </BrowserRouter>\n            </React.Suspense>\n        </SessionProvider>\n    )\n};\n\nexport default Router;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/functions\";\nimport Router from 'router';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.less';\nimport 'assets/styles/main.less';\n\n// Initialize Firebase\nfirebase.initializeApp({\n    apiKey            : process.env.REACT_APP_API_KEY,\n    authDomain        : process.env.REACT_APP_AUTH_DOMAIN,\n    projectId         : process.env.REACT_APP_PROJECT_ID,\n    storageBucket     : process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId : process.env.REACT_APP_MASSAGING_SENDER_ID,\n    appId             : process.env.REACT_APP_ID\n});\n\n// if (window.location.hostname === \"localhost\") {\n//\n//     firebase.firestore().useEmulator(\"localhost\", 8081);\n//     firebase.auth().useEmulator(\"http://localhost:9099\");\n//     firebase.functions().useEmulator(\"localhost\", 5001);\n// }\n\nReactDOM.render(<Router />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}