{"version":3,"sources":["hooks/frontpage/index.ts","pages/home/banner.tsx","services/read/index.ts","pages/home/gallery.tsx","hooks/fetch/index.tsx","pages/home/index.tsx"],"names":["useFrontpage","useState","isLoading","setLoading","bannerURL","setBannerURL","getBannerURL","useCallback","a","storage","firebase","storageRef","ref","child","getDownloadURL","url","notification","error","message","useEffect","Banner","style","backgroundImage","id","className","gutter","md","push","span","sm","xs","pull","React","memo","read","collection","orderBy","firestore","get","then","snapshot","data","forEach","doc","key","Promise","resolve","catch","reject","readLimit","limit","Gallery","sortDirection","useLimit","datasource","setDatasource","readData","description","useFetch","Array","fill","map","item","x","lg","height","once","onClick","img","title","desc","isSoldOut","imageURL","Modal","info","icon","width","closable","centered","closeIcon","CloseCircleOutlined","fontSize","color","okText","okButtonProps","disabled","padding","overflow","bodyStyle","onOk","window","open","replace","content","src","alt","marginTop","borderRadius","cursor","Avatar","size","shape","active","length","slice","Home","Publiclayout"],"mappings":"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","file":"static/js/4.0f572a1e.chunk.js","sourcesContent":["import {useCallback, useEffect, useState} from \"react\";\nimport {notification} from \"antd\";\nimport firebase from \"firebase/app\";\nimport \"firebase/storage\";\n\ntype Values = [\n    isLoading : boolean,\n    bannerURL : string\n]\n\nfunction useFrontpage() : Values {\n\n    const [isLoading, setLoading] = useState<boolean>(false);\n    const [bannerURL, setBannerURL] = useState<string>(\"\");\n\n    const getBannerURL = useCallback(async () => {\n        try {\n            setLoading(true);\n\n            const storage = firebase.storage();\n\n            const storageRef = storage.ref(\"/frontpage/banner/\");\n\n            const url = await storageRef.child(\"front-page-banner\").getDownloadURL();\n\n            setBannerURL(url);\n        } catch (e) {\n\n            notification.error({message : e.message});\n        } finally {\n\n            setLoading(false);\n        }\n    }, []);\n\n    useEffect(() => {\n\n        getBannerURL();\n\n    }, [getBannerURL]);\n\n    return [isLoading,bannerURL];\n}\n\nexport default useFrontpage;","import React from \"react\";\nimport {Col, Row} from \"antd\";\nimport useFrontpage from \"hooks/frontpage\";\n\nconst Banner : React.FC = () => {\n\n    const [, bannerURL] = useFrontpage();\n\n    return (\n        <section style={{backgroundImage : `url(${bannerURL})`}} id={\"banner\"} className={\"main-banner\"}>\n            <div className={\"foreground\"} />\n            <div className={\"public-container\"}>\n                <Row gutter={[50, 30]} className={\"describe\"}>\n                    <Col md={{push : 13, span : 11}}  sm={24} xs={24}>\n                        <div className={\"sub-banner\"}>\n                            {/*<img src={bannerURL} alt={\" \"} />*/}\n                        </div>\n                    </Col>\n                    <Col md={{pull : 11, span : 13}} sm={24} xs={24} className={\"carousel-section\"}>\n                        <div className={`section-heading`}>\n                            <div>\n                                <h1 className={\"title\"}>British Short Hair & Scottish Fold</h1>\n                                <p>Cattery and Import Cat Rusia Ukraine China</p>\n                            </div>\n                        </div>\n                    </Col>\n                </Row>\n            </div>\n        </section>\n    )\n}\n\nexport default React.memo(Banner);","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nexport async function read(collection : string, orderBy : \"desc\" | \"asc\" = \"desc\") : Promise<any[]>{\n    return firebase.firestore()\n        .collection(collection)\n        .orderBy(\"createdAt\", orderBy)\n        .get()\n        .then(snapshot => {\n            let data: any[];\n            data = [];\n            snapshot.forEach(doc => {\n                data.push({...doc.data(), key: doc.id});\n            });\n            return Promise.resolve(data);\n        })\n        .catch(error => {\n\n            return Promise.reject(error);\n        });\n}\n\nexport async function readById(collection : string, docId : string) : Promise<any>{\n    return firebase.firestore()\n        .collection(collection)\n        .doc(docId)\n        .get()\n        .then(doc => {\n\n            return Promise.resolve({...doc.data(), key : doc.id});\n\n        })\n        .catch(error => {\n\n            return Promise.reject(error);\n        });\n}\n\n\nexport async function readLimit(collection : string, limit : number, orderBy : \"desc\" | \"asc\" = \"desc\") : Promise<any[]>{\n    return firebase.firestore()\n        .collection(collection)\n        .orderBy(\"createdAt\", orderBy)\n        .limit(limit)\n        .get()\n        .then(snapshot => {\n            let data: any[];\n            data = [];\n            snapshot.forEach(doc => {\n                data.push({...doc.data(), key: doc.id});\n            });\n            return Promise.resolve(data);\n        })\n        .catch(error => {\n\n            return Promise.reject(error);\n        });\n}\n","import React from \"react\";\nimport {Col, Image, Modal, Row, Skeleton, Tag} from \"antd\";\nimport useFetch from \"hooks/fetch\";\nimport {Cats} from \"interfaces\";\nimport {CloseCircleOutlined} from \"@ant-design/icons\";\nimport Lazyload from \"react-lazyload\";\n\nconst Gallery : React.FC = () => {\n\n    const [isLoading, datasource] = useFetch(\"cats\", \"desc\", false, 6);\n\n    /**\n     *\n     * @param img\n     * @param title\n     * @param desc\n     */\n    const openModal = (img : string | undefined, title : string, desc : string, isSoldOut : boolean) : void => {\n        Modal.info({\n            className     : \"detail-gallery\",\n            title         : null,\n            icon          : null,\n            width         : 500,\n            closable      : true,\n            centered      : false,\n            closeIcon     : <CloseCircleOutlined style={{fontSize : 20, color : \"#ffffff\"}} />,\n            okText        : \"Buy\",\n            okButtonProps : {disabled : isSoldOut},\n            style         : {padding : 0, overflow : \"hidden\"},\n            bodyStyle     : {padding : 0},\n            onOk          : () => {\n\n              window.open(\"https://wa.me/6281939080513/?text=Saya%20tertarik%20dengan%20\" + title.replace(/ /g, \"%20\"))\n            },\n            content       : (\n                <div>\n                    <Lazyload height={\"100%\"} once={true}>\n                        <Image\n                            width={\"100%\"}\n                            src={img}\n                            alt={title}\n                            style={{ marginTop : \"-8px\", borderRadius : \"5px 5px 0 0\", cursor: \"pointer\"}}\n                        />\n                    </Lazyload>\n                    <div style={{padding : \"23px 20px\"}}>\n                        <h3>{title}</h3>\n                        <p>{desc}</p>\n                    </div>\n                </div>\n            )\n        })\n    }\n\n    return (\n        <section id={\"gallery\"} className={\"main-gallery\"}>\n            <div className={\"public-container\"}>\n                <Row gutter={[50, 10]}>\n                    <Col md={8} sm={24} xs={24}>\n                        <div className={\"section-heading\"}>\n                            <h2 className={\"title\"}>Gallery</h2>\n                            <p className={\"subtitle\"}>Cattery and Import Cat Rusia Ukraine China</p>\n                        </div>\n                    </Col>\n                    <Col md={16} sm={24} xs={24}>\n                        <Row gutter={[20, 10]}>\n                            {\n                                (isLoading ? new Array(25).fill(1, 0, 6) : datasource)\n                                    .map((item : Cats, x: number) => (\n                                        <Col key={x} lg={12} md={12} sm={24} xs={24}>\n                                            <Lazyload height={1000} once={true}>\n                                                <div\n                                                    onClick={() => {\n                                                        openModal(item.imageURL, item.title, item.description, item.isSoldOut === \"terjual\");\n                                                    }}\n                                                    className={\"gallery-list\"}\n                                                >\n                                                    <div className={\"section-image\"}>\n                                                        <div className={\"tag\"}>\n                                                            {\n                                                                !isLoading\n                                                                    ? item.isSoldOut === \"terjual\"\n                                                                        ? <Tag color=\"red\">Sold Out</Tag>\n                                                                        : <Tag color=\"green\">Ready</Tag>\n                                                                    :null\n                                                            }\n                                                        </div>\n                                                        {\n                                                            isLoading\n                                                                ? <Skeleton.Avatar size={500} shape={\"square\"} active={true} />\n                                                                : <img\n                                                                    width={\"100%\"} height={\"100%\"}\n                                                                    style={{cursor : \"pointer\"}}\n                                                                    src={item.imageURL}\n                                                                    alt={item.title}\n                                                                />\n\n                                                        }\n                                                    </div>\n                                                    <div className={\"section-text\"}>\n                                                        <h3>{item.title}</h3>\n                                                        <p>{\n                                                            item.description?.length > 100\n                                                                ? item.description.slice(0, 100) + \" ...\"\n                                                                : item.description\n                                                        }</p>\n                                                    </div>\n                                                </div>\n                                            </Lazyload>\n                                        </Col>\n                                    ))\n                            }\n                        </Row>\n                    </Col>\n                </Row>\n            </div>\n        </section>\n    )\n}\n\nexport default React.memo(Gallery);","import {useCallback, useEffect, useState} from \"react\";\nimport {notification} from \"antd\";\nimport {read, readById, readLimit} from \"services/read\";\n\nexport function useFetchById(collection : string, docId : string) {\n    \n    const [isLoading, setLoading]     = useState<boolean>(false);\n    const [datasource, setDatasource] = useState<any>({});\n\n    const readData   = useCallback(async () : Promise<void> => {\n        try {\n\n            setLoading(true);\n            \n            const snapshot = await readById(collection, docId)\n\n            setDatasource(snapshot);\n\n        } catch (error) {\n\n            notification.error({\n                message : error.message,\n                description : error.description\n            });\n\n        } finally {\n\n            setLoading(false)\n        }\n\n    }, [collection, docId]);\n\n    useEffect(() => {\n        ( async () => readData())();\n\n    }, [readData]);\n\n    return [isLoading, datasource];\n}\n\ntype useFetchValue = [\n    isLoading : boolean,\n    datasource : any[]\n]\n\nexport default function useFetch(\n    collection    : string,\n    sortDirection : \"desc\" | \"asc\" = \"desc\",\n    useLimit      : boolean = false,\n    limit         : number = 10\n) : useFetchValue {\n\n    const [isLoading, setLoading]     = useState<boolean>(false);\n    const [datasource, setDatasource] = useState<any[]>([]);\n\n    const readData   = useCallback(async () : Promise<void> => {\n        try {\n\n            let snapshot : any[];\n\n            setLoading(true);\n\n            if (useLimit)\n                snapshot  = await readLimit(collection, limit, sortDirection);\n            else\n                snapshot = await read(collection, sortDirection);\n\n            setDatasource(snapshot);\n\n        } catch (error) {\n\n            notification.error({\n                message : error.message,\n                description : error.description\n            });\n\n        } finally {\n\n            setLoading(false)\n        }\n\n    }, [collection, sortDirection, limit, useLimit]);\n\n    useEffect(() => {\n\n        ( async () => readData())()\n    }, [readData]);\n\n    return [isLoading, datasource];\n}\n","import React from \"react\";\nimport Component from \"components\";\nimport \"assets/styles/home.less\";\n\nimport Banner from \"./banner\";\nimport Gallery from \"./gallery\";\n\nconst Home : React.FC = () => {\n\n    return (\n       <Component.Publiclayout>\n           <section className={\"home-wrapper\"}>\n               <Banner />\n               <Gallery />\n           </section>\n       </Component.Publiclayout>\n    )\n}\n\nexport default Home;"],"sourceRoot":""}